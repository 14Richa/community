name: Welcome New Contributor

on:
  pull_request:
    types: [closed]
    paths: 
      - 'TSC_MEMBERS.json'

jobs:
  welcome:
    if: github.event.pull_request.merged 
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout main branch 
        uses: actions/checkout@v2
        with:
          ref: master
          path: community-main
      - name: Checkout other branch
        uses: actions/checkout@v2
        with: 
          ref: ${{github.event.inputs.branch}}
      - name: Compare files
        id: compare-files
        uses: actions/github-script@v4
        with:
          script: |
            const fs = require("fs");
            const main_file = JSON.parse(fs.readFileSync(`community-main/TSC_MEMBERS.json`));
            const new_file = JSON.parse(fs.readFileSync('TSC_MEMBERS.json'));
            const added = new_file.filter(
              (newObj) => !main_file.some((oldObj) => oldObj.github === newObj.github)
            );
            const removed = main_file.filter(
              (oldObj) => !new_file.some((newObj) => newObj.github === oldObj.github)
            );
            if(added.length > 0) {
              core.info(`Added Contributers : ${JSON.stringify(added)`)
              core.setOutput("added_contributors", added.map((obj) => obj.github).join(","));
            }
            if(removed.length > 0) {
              core.info(`Removed Contributers : ${removed}`)
              core.setOutput("removed", "true");
            }           
      - name: Display welcome message
        if: ${{steps.compare-files.outputs.added_contributors != ''}}
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const newContributors = `${{steps.compare-files.outputs.added}}`.split(",");
            const welcomeMessage = `Welcome ${newContributors.map((contributor) => `@${contributor.trim().replace(/^@/, '')}`).join(", ")}!!`;
            const { owner, repo } = context.repo;
            const { number: issue_number } = context.issue;
            return github.issues.createComment({ owner, repo, issue_number, body: welcomeMessage });
            