name: Validating the list of maintainers

on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
    paths:
      - 'MAINTAINERS.yaml'

jobs:
  # Make sure that changes in the MAINTAINERS.yaml file do not break the schema
  # Until we have MAINTAINERS.yaml updates automated, we need to ensure we are not breaking things
  validate_schema:
    if: github.event.pull_request.draft == false
    name: Validate JSON Schema for MAINTAINERS list
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - run: npm install ajv@6.12.6
      - name: Install dependencies
        run: npm install js-yaml@4.1.0
      - name: Validate list with schema
        uses: actions/github-script@v4
        with:
          script: |
            const Ajv = require("ajv");
            const fs = require('fs').promises;
            const yaml = require('js-yaml');

            const schema = await fs.readFile('.github/workflows/tsc_members_validator/schema.json', 'utf8');
            const members = await fs.readFile('MAINTAINERS.yaml', 'utf8');
            
            const ajv = new Ajv();
            const validator = ajv.compile(JSON.parse(schema));

            const valid = validator(yaml.load(members));

            if (!valid) {
              core.error(`Validation of maintainers file failed with the following errors:`);
              core.error(validator.errors);
            } else {
              core.info(`MAINTAINERS file is valid`);
            }

  # Open governance model doesn't allow more than 1/4 maintainers affiliated with a single company
  calculate_companies:
    if: github.event.pull_request.draft == false
    name: Calculate TSC members affiliation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install dependencies
        run: npm install js-yaml@4.1.0
      - name: Calculate
        uses: actions/github-script@v4
        with:
          script: |
            const fs = require('fs');
            const yaml = require('js-yaml');
            const members = yaml.load(fs.readFileSync('./MAINTAINERS.yaml', 'utf8'));
            // Filter in the members who are part of the TSC
            const tscMembers = members.filter(member => member.isTscMember);

            const allTscMembers = tscMembers.length;

            const allowedMemberPerCompany = Math.floor(allTscMembers / 4);
            const numberOfMemByCompany = tscMembers.reduce((acc, m) => {
              const company = m.company && m.company.toLowerCase();
              if (company) acc.has(company) ? acc.set(company, acc.get(company) + 1) : acc.set(company, 1);
              return acc;
            }, new Map());

            numberOfMemByCompany.forEach((numberOfRepresentatives, companyName) => {
              if (numberOfRepresentatives > allowedMemberPerCompany) {
                core.setFailed(`There are too many TSC members affiliated with ${companyName} and it violates the open governance model. ${numberOfRepresentatives} is more than 1/4 of ${allTscMembers}`);
              }
            });
  
  detect_maintainer_changes:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: master
          path: community-main

      - name: Checkout PR branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          path: community

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install js-yaml
        run: npm install js-yaml@4.1.0

      - name: Compare files and check removed TSC members
        id: compare-files
        uses: actions/github-script@v6
        with:
          script: |
              const fs = require("fs");
              const yaml = require('js-yaml');

              // Extract PR author
              const author = github.context.payload.pull_request.user.login;

              let removedTscMembers = [];

              // If the PR is made by the bot, continue, otherwise skip

              if (author === 'asyncapi-bot') {
                
                  const mainMaintainers = yaml.load(fs.readFileSync('./community-main/MAINTAINERS.yaml', 'utf8'));
                  const prMaintainers = yaml.load(fs.readFileSync('./community/MAINTAINERS.yaml', 'utf8'));

                  const removedMaintainers = mainMaintainers.filter(
                      (mainMaintainer) => !prMaintainers.some((maintainer) => mainMaintainer.github === maintainer.github)
                  );

                  removedTscMembers = removedMaintainers.filter(maintainer => maintainer.isTscMember);

                  if (removedTscMembers.length > 0) {
                      core.setOutput("removedTscMembers", JSON.stringify(removedTscMembers));
                  }
              }

      - name: Comment on PR if TSC member is removed
        if: steps.compare-files.outputs.removedTscMembers != ''
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GH_TOKEN}}
          script: |
              const github = require('@actions/github');

              const issueComment = {
                  owner: github.context.repo.owner,
                  repo: github.context.repo.repo,
                  issue_number: github.context.issue.number,
                  body: 'A TSC member has been removed in this PR. Maintainers of this repository need to review and approve this PR.'
              };

              github.issues.createComment(issueComment);